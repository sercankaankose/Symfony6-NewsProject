{% extends 'base.html.twig' %}

{% block body %}
    <style>
        /* Your existing styles here */
        .news-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .news-table th, .news-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .news-table th {
            background-color: #f2f2f2;
        }

        .news-table tr:hover {
            background-color: #f5f5f5;
            cursor: pointer;
        }
    </style>

    <div class="container-fluid">
        <div class="row">

            <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-light sidebar">
                {% include 'sidebar_template.twig' %}
            </nav>

            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <br>
                <br>
                <br>
                <br>
                <br>
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">NEWS ASSIGNED REVIEW</h2>
                    <a class="btn btn-outline-primary btn-lg" href="{{ path('app_dashboard') }}">Back Dashboard</a>
                </div>
                <hr>
                <div class="content-container">
                    <div class="row">
                        <div class="col-md-4">
                            <input class="w3-input w3-border w3-padding" type="text" placeholder="Search" id="myInput"
                                   onkeyup="myFunction()">
                        </div>
                        <div class="col-md-4 text-end"> <!-- text-end ile içeriği sağa hizaladık -->
                            <select id="news-filter" class="form-select custom-select-blue"
                                    onchange="location = this.value;">
                                <option value="{{ path('editor_updatereview') }}">assigned News</option>
                                <option value="{{ path('editor_review') }}">not assigned</option>
                            </select>
                        </div>
                    </div>
                </div>

                <hr>
                {% for message in app.flashes('takesucces') %}
                    <div class="alert alert-success text-center">
                        {{ message }}
                    </div>
                {% endfor %}
                <table class="news-table" id="myTable2">
                    <tr>
                        <th onclick="sortTable(0)">Title</th>
                        <th onclick="sortTable(1)">News ID</th>
                        <th onclick="sortTable(2)">Author</th>
                        <th onclick="sortTable(3)">Editor</th>
                        <th onclick="sortTable(4)">Content</th>
                        <th>Image</th>
                        <th>Action</th>

                    </tr>
                    {% for news in newsList2 %}
                        <tr>
                            <td>{{ news.title }}</td>
                            <td>{{ news.id }}</td>
                            <td>{{ news.author.name }} {{ news.author.surname }}</td>
                            <td>
                                {% if news.editor %}
                                    {{ news.editor.name }} {{ news.editor.surname }}
                                {% else %}
                                    --
                                {% endif %}
                            </td>
                            <td>{{ news.content|slice(0, 150) }}</td>
                            <td>
                                {% if news.image %}
                                    <img class="news-image" src="{{ asset(news.image) }}" alt="News Image"
                                         width="160" height="100">
                                {% else %}
                                {% endif %}
                            </td>
                            <td><a class="btn btn-info" href="{{ path('editor_take', {'id': news.id}) }}">Take</a>
                            </td>

                        </tr>
                    {% endfor %}
                </table>
            </main>
        </div>
    </div>
{% endblock %}
 {% block javascripts %}
     <script>
         function myFunction() {
             var input, filter, table, tr, td, i, j;
             input = document.getElementById("myInput");
             filter = input.value.toUpperCase();
             table = document.getElementById("myTable2");
             tr = table.getElementsByTagName("tr");

             var headerRow = tr[0];
             for (i = 1; i < tr.length; i++) {
                 var found = false;
                 td = tr[i].getElementsByTagName("td");
                 for (j = 0; j < td.length; j++) {
                     if (td[j]) {
                         var txtValue = td[j].textContent || td[j].innerText;
                         if (txtValue.toUpperCase().indexOf(filter) > -1) {
                             found = true;
                             break;
                         }
                     }
                 }
                 if (found) {
                     tr[i].style.display = "";
                 } else {
                     tr[i].style.display = "none";
                 }
             }

             headerRow.style.display = "";
         }
     </script>

     <script>
         function sortTable(n) {
             var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
             table = document.getElementById("myTable2");
             switching = true;
             // Set the sorting direction to ascending:
             dir = "asc";
             /* Make a loop that will continue until
             no switching has been done: */
             while (switching) {
                 // Start by saying: no switching is done:
                 switching = false;
                 rows = table.rows;
                 /* Loop through all table rows (except the
                 first, which contains table headers): */
                 for (i = 1; i < (rows.length - 1); i++) {
                     // Start by saying there should be no switching:
                     shouldSwitch = false;
                     /* Get the two elements you want to compare,
                     one from the current row and one from the next: */
                     x = rows[i].getElementsByTagName("TD")[n];
                     y = rows[i + 1].getElementsByTagName("TD")[n];
                     /* Check if the two rows should switch place,
                     based on the direction, asc or desc: */
                     if (dir == "asc") {
                         if (x.innerHTML.toLowerCase().localeCompare(y.innerHTML.toLowerCase(), 'tr') > 0) {
                             // If so, mark as a switch and break the loop:
                             shouldSwitch = true;
                             break;
                         }
                     } else if (dir == "desc") {
                         if (x.innerHTML.toLowerCase().localeCompare(y.innerHTML.toLowerCase(), 'tr') < 0) {
                             // If so, mark as a switch and break the loop:
                             shouldSwitch = true;
                             break;
                         }
                     }
                 }
                 if (shouldSwitch) {
                     /* If a switch has been marked, make the switch
                     and mark that a switch has been done: */
                     rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                     switching = true;
                     // Each time a switch is done, increase this count by 1:
                     switchcount++;
                 } else {
                     /* If no switching has been done AND the direction is "asc",
                     set the direction to "desc" and run the while loop again. */
                     if (switchcount == 0 && dir == "asc") {
                         dir = "desc";
                         switching = true;
                     }
                 }
             }
         }

     </script>
 {% endblock %}
{% block title %}
    News Review
{% endblock %}
